concurrent programming means many thing happen at the same time
if multi cpu system then it is real
if single cpu then it is illusion 
concurrency can be done in both cases
processes managed by os and have different address spaace and have overhead but used in distrubted systems
threads are light process within one process ease od use
shared data synchronization must be ensured during threads because it is programmer responsibility
main is considered thread, main thread should wait other threads before finshings otherwise threads will be terminating by os
if you detach thread then will not be able to joing again 
threads if firsted supported by the standard language since c++11
threads creation wait join detach randomness


In C++, callable objects are object that can appear as the left-hand operand of the call operator. These can be
 pointers to functions, 
 objects of a class that defines an overloaded function call operator and
 lambdas (an anonymous inline function), with which function objects can be created in a very simple way.
 In the context of concurrency, we can use callable objects to attach a function to a thread.