Exclusive ownership policy
This policy states that whenever a resource management object is copied, the resource handle is transferred from the source pointer to the destination pointer.
 In the process, the source pointer is set to nullptr to make ownership exclusive.
 At any time, the resource handle belongs only to a single object, which is responsible for its deletion when it is no longer needed.
 
 One problem in this implementation is that for a short time there are effectively two valid handles to the same resource - after the handle has been copied and before it is set to nullptr.
 In concurrent programs, this would cause a data race for the resource. A much better alternative to handle exclusive ownership in C++ would be to use move semantics,

 